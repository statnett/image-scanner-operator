---
name: CI
on:
  pull_request: {}
  push:
    branches:
      - main
concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true
permissions: # added using https://github.com/step-security/secure-workflows
  contents: read
jobs:
  golangci-lint:
    permissions:
      contents: read # for actions/checkout to fetch code
      pull-requests: read # for golangci/golangci-lint-action to fetch pull requests
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version-file: go.mod
          cache: true
      - uses: golangci/golangci-lint-action@0ad9a0988b3973e851ab0a07adf248ec2e100376 # v3.3.1
        with:
          version: v1.50.1
          args: --timeout 5m
  yaml-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - uses: ibiqlik/action-yamllint@2576378a8e339169678f9939646ee3ee325e845c # v3.1.1
  verify-generated:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version-file: go.mod
          cache: true
      - name: Generate all
        run: |
          make generate-all
      - name: Verify changed files
        uses: tj-actions/verify-changed-files@a148bdba9d2477a2aca3537bd6bc7a7af54b06f2 # v13
        id: verify-changed-files
        with:
          files: |
            **/*
      - name: Fail job is any changed files
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          errorMsg="::error::\
            Changed files: ${{ steps.verify-changed-files.outputs.changed_files }}\
            \nPlease run 'make generate-all' locally and commit the changes"
          echo -e "$errorMsg" && exit 1
  test:
    needs: verify-generated
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version-file: go.mod
          cache: true
      - run: make test
  build-image:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          tags: image-scanner/controller:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/controller-image.tar
      - uses: actions/upload-artifact@v3
        with:
          name: controller-image
          path: /tmp/controller-image.tar
  e2e-test:
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
      - uses: actions/download-artifact@v3
        with:
          name: controller-image
          path: /tmp
      - uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: image-scanner
          args: >-
            --config=k3d-config.yml
      - run: |
          kubectl cluster-info
          kubectl version --output=yaml
      - run: |
          k3d image import --cluster image-scanner /tmp/controller-image.tar
          make deploy-dependencies deploy
      - uses: jaxxstorm/action-install-gh-release@v1
        with:
          repo: kudobuilder/kuttl
          tag: v0.15.0
          cache: enable
      - run: |
          make e2e-test
