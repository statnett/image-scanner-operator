// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	metav1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// ContainerImageScanStatusApplyConfiguration represents a declarative configuration of the ContainerImageScanStatus type for use
// with apply.
type ContainerImageScanStatusApplyConfiguration struct {
	ObservedGeneration     *int64                                  `json:"observedGeneration,omitempty"`
	LastScanJobUID         *types.UID                              `json:"lastScanJobUID,omitempty"`
	LastScanTime           *v1.Time                                `json:"lastScanTime,omitempty"`
	LastSuccessfulScanTime *v1.Time                                `json:"lastSuccessfulScanTime,omitempty"`
	Conditions             []metav1.ConditionApplyConfiguration    `json:"conditions,omitempty"`
	Vulnerabilities        []VulnerabilityApplyConfiguration       `json:"vulnerabilities,omitempty"`
	VulnerabilitySummary   *VulnerabilitySummaryApplyConfiguration `json:"vulnerabilitySummary,omitempty"`
}

// ContainerImageScanStatusApplyConfiguration constructs a declarative configuration of the ContainerImageScanStatus type for use with
// apply.
func ContainerImageScanStatus() *ContainerImageScanStatusApplyConfiguration {
	return &ContainerImageScanStatusApplyConfiguration{}
}

// WithObservedGeneration sets the ObservedGeneration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObservedGeneration field is set to the value of the last call.
func (b *ContainerImageScanStatusApplyConfiguration) WithObservedGeneration(value int64) *ContainerImageScanStatusApplyConfiguration {
	b.ObservedGeneration = &value
	return b
}

// WithLastScanJobUID sets the LastScanJobUID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastScanJobUID field is set to the value of the last call.
func (b *ContainerImageScanStatusApplyConfiguration) WithLastScanJobUID(value types.UID) *ContainerImageScanStatusApplyConfiguration {
	b.LastScanJobUID = &value
	return b
}

// WithLastScanTime sets the LastScanTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastScanTime field is set to the value of the last call.
func (b *ContainerImageScanStatusApplyConfiguration) WithLastScanTime(value v1.Time) *ContainerImageScanStatusApplyConfiguration {
	b.LastScanTime = &value
	return b
}

// WithLastSuccessfulScanTime sets the LastSuccessfulScanTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastSuccessfulScanTime field is set to the value of the last call.
func (b *ContainerImageScanStatusApplyConfiguration) WithLastSuccessfulScanTime(value v1.Time) *ContainerImageScanStatusApplyConfiguration {
	b.LastSuccessfulScanTime = &value
	return b
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *ContainerImageScanStatusApplyConfiguration) WithConditions(values ...*metav1.ConditionApplyConfiguration) *ContainerImageScanStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConditions")
		}
		b.Conditions = append(b.Conditions, *values[i])
	}
	return b
}

// WithVulnerabilities adds the given value to the Vulnerabilities field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Vulnerabilities field.
func (b *ContainerImageScanStatusApplyConfiguration) WithVulnerabilities(values ...*VulnerabilityApplyConfiguration) *ContainerImageScanStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithVulnerabilities")
		}
		b.Vulnerabilities = append(b.Vulnerabilities, *values[i])
	}
	return b
}

// WithVulnerabilitySummary sets the VulnerabilitySummary field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the VulnerabilitySummary field is set to the value of the last call.
func (b *ContainerImageScanStatusApplyConfiguration) WithVulnerabilitySummary(value *VulnerabilitySummaryApplyConfiguration) *ContainerImageScanStatusApplyConfiguration {
	b.VulnerabilitySummary = value
	return b
}
